name: Build and Deploy

on:
  push:
    branches:
      - main
      - 'project/**'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Initialize and update submodules
        run: |
          git submodule init
          git submodule update --recursive --remote
          git submodule status

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install the dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Get branch name and setup build
        id: branch-name
        run: |
          if [[ $GITHUB_REF == refs/heads/project/* ]]; then
            # For project branches, use the specific project's notebooks
            echo "BRANCH_PATH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
            echo "CONTENT_PATH=notebooks/${GITHUB_REF#refs/heads/project/}" >> $GITHUB_ENV
          else
            # For main branch, use the base notebooks
            echo "BRANCH_PATH=main" >> $GITHUB_ENV
            echo "CONTENT_PATH=notebooks" >> $GITHUB_ENV
          fi
          
          # Create branch-specific directory
          mkdir -p dist/${{ env.BRANCH_PATH }}

      - name: Build JupyterLite site
        run: |
          # Debug information
          echo "Building for branch: ${{ env.BRANCH_PATH }}"
          echo "Using content from: ${{ env.CONTENT_PATH }}"
          echo "Contents of notebooks directory:"
          ls -la notebooks/
          
          # Build JupyterLite for this branch
          jupyter lite build --contents ${{ env.CONTENT_PATH }} --output-dir dist/${{ env.BRANCH_PATH }}

      # If this is the main branch, also build the root site
      - name: Build root site
        if: github.ref == 'refs/heads/main'
        run: |
          jupyter lite build --contents notebooks --output-dir dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/project/')
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4